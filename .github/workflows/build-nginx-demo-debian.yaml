name: Build custom NGINX image (Debian)

on:
  workflow_dispatch:
    inputs:
      nginx_version:
        description: 'Base image version tag'
        required: true
        type: string
      push:
        description: 'True to push image to repo'
        default: false
        type: boolean

jobs:
  build_nginx_debian:
    name: Build Custom NGINX image (Debian)

    env:
      BUILD_NAME: Custom NGINX
      SUBDIRECTORY: custom-nginx-debian
      SUBVERSION: ""

    runs-on:
      - ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set variables
        run: |
          . ./vars.sh
          echo "BASE_IMAGE=${BASE_IMAGE_NGINX}" >> $GITHUB_ENV
          echo "OUTPUT_IMAGE_REGISTRY=${OUTPUT_IMAGE_REGISTRY}" >> $GITHUB_ENV
          echo "OUTPUT_IMAGE=${OUTPUT_IMAGE_REGISTRY}${OUTPUT_IMAGE_REGISTRY:+/}${OUTPUT_IMAGE_REPO_NGINX}" >> $GITHUB_ENV
          echo "BASE_IMAGE_TAG=${{ inputs.nginx_version }}${{ env.SUBVERSION }}" >> $GITHUB_ENV
          echo "OUTPUT_IMAGE_TAG=${{ inputs.nginx_version }}" >> $GITHUB_ENV

      - name: Print info
        run: |
          echo "Building ${{ env.BUILD_NAME }} image for version ${{ inputs.nginx_version }}"
          echo "Base image: ${{ env.BASE_IMAGE }}:${{ env.BASE_IMAGE_TAG }}"
          echo "Output image: ${{ env.OUTPUT_IMAGE }}:${{ env.OUTPUT_IMAGE_TAG }}"
          [ "x${{ inputs.push }}" == "xtrue" ] && echo "Pushing image to repo" || true
          [ "x${{ inputs.push }}" != "xtrue" ] && echo "Not pushing image to repo" || true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: ${{ inputs.push && env.OUTPUT_IMAGE_REGISTRY == 'ghcr.io' }}
        with:
          registry: ${{ env.OUTPUT_IMAGE_REGISTRY }}
          username: ${{ github.actor  }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to container registry
        uses: docker/login-action@v3
        if: ${{ inputs.push && env.OUTPUT_IMAGE_REGISTRY != 'ghcr.io' }}
        with:
          registry: ${{ env.OUTPUT_IMAGE_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME  }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.SUBDIRECTORY }}
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            BASE_IMAGE_TAG=${{ env.BASE_IMAGE_TAG }}
          tags: ${{ env.OUTPUT_IMAGE }}:${{ env.OUTPUT_IMAGE_TAG }}
          push: ${{ inputs.push }}
